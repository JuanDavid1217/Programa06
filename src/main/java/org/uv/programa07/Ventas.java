/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.uv.programa07;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.uv.DAO.DAOVenta;
import org.uv.DAO.DAOProducto;
import org.uv.Entyties.*;
/**
 *
 * @author juand
 */
public class Ventas extends javax.swing.JInternalFrame {
    private DAOVenta daoVen=new DAOVenta();
    private int posicion=0;
    private int posiciondetalle=0;
    private List<Detalle_Venta> ldv;
    private Venta ven;
    private Date fecha;
    /**
     * Creates new form Ventas
     */
    
    public Ventas() {
        initComponents();
        nuevo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Fecha = new javax.swing.JLabel();
        NumVenta = new javax.swing.JLabel();
        FechaEntrada = new javax.swing.JLabel();
        NumVentaEntrada = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();
        TotalEntrada = new javax.swing.JLabel();
        ID_Producto = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        CantidadEntrada = new javax.swing.JTextField();
        ID_ProductoEntrada = new javax.swing.JTextField();
        agregar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        cobrar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();

        setClosable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        Fecha.setText("Fecha:");

        NumVenta.setText("No.Venta:");

        FechaEntrada.setText("Aquí ira la fecha");

        NumVentaEntrada.setText("Aquí ira el no. de venta");

        Total.setText("Total:");

        TotalEntrada.setText("Aqui ira el total");

        ID_Producto.setText("ID producto:");

        jLabel1.setText("Cantidad:");

        ID_ProductoEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ID_ProductoEntradaActionPerformed(evt);
            }
        });

        agregar.setIcon(new javax.swing.ImageIcon("D:\\6toSemestre\\Desarrollo de aplicaciones\\NetBeansProjects\\Programa06\\src\\main\\java\\org\\uv\\Imagenes\\agregar.png")); // NOI18N
        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        eliminar.setIcon(new javax.swing.ImageIcon("D:\\6toSemestre\\Desarrollo de aplicaciones\\NetBeansProjects\\Programa06\\src\\main\\java\\org\\uv\\Imagenes\\eliminar.png")); // NOI18N
        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        cobrar.setIcon(new javax.swing.ImageIcon("D:\\6toSemestre\\Desarrollo de aplicaciones\\NetBeansProjects\\Programa06\\src\\main\\java\\org\\uv\\Imagenes\\Cobrar.jpg")); // NOI18N
        cobrar.setText("Cobrar");
        cobrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cobrarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(cobrar)
                        .addGap(58, 58, 58)
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ID_Producto)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CantidadEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ID_ProductoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agregar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(eliminar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(29, 29, 29)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Total)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TotalEntrada))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(NumVenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NumVentaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Fecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FechaEntrada))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FechaEntrada, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Fecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumVentaEntrada)
                    .addComponent(NumVenta))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Total)
                            .addComponent(TotalEntrada))
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID_Producto)
                            .addComponent(ID_ProductoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregar))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(CantidadEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eliminar))
                        .addGap(85, 85, 85)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cobrar)
                            .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ID_ProductoEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ID_ProductoEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ID_ProductoEntradaActionPerformed
    
    
    public void nuevo(){
        List <Venta> lv=daoVen.findAll();
        if(lv.size()!=0){
            posicion=lv.size()-1;
            Venta v=lv.get(posicion);
            if (v!=null){
                NumVentaEntrada.setText(String.valueOf(v.getId_venta()+1));
                System.out.println("Hola, se agrego el Num de Venta");
                posiciondetalle=v.getDetalle_venta().get(v.getDetalle_venta().size()-1).getId_detalle_venta();
                System.out.println("Hola, se agrego el Num de Venta " + posiciondetalle);
            }
        }else{
            NumVentaEntrada.setText("1");
        }
        fecha=Date.from(Instant.now());
        FechaEntrada.setText(String.valueOf(fecha.getTime()));
        ldv=new ArrayList<Detalle_Venta>();
        ven=new Venta(Integer.parseInt(NumVentaEntrada.getText()), fecha, ldv);
        fillData(ven.getDetalle_venta());
    }
    
    public void fillData(List <Detalle_Venta> ldv){
        List<String> columns = new ArrayList<String>();
        List<String[]> values = new ArrayList<String[]>();
        
        columns.add("No.Venta");
        columns.add("Descripcion");
        columns.add("Cantidad");
        columns.add("Precio");
        columns.add("Subtotal");
        int a=1;
        for(Detalle_Venta detalle: ldv){
            values.add(new String[]{String.valueOf(a), detalle.getProducto().getDescripcion(),String.valueOf(detalle.getCantidad()),
            String.valueOf(detalle.getPrecio_venta()), String.valueOf(detalle.getSubtotal())});
            a+=1;
        }
        TableModel tablemodel= new DefaultTableModel(values.toArray(new Object[][] {}), columns.toArray());
        jTable1.setModel(tablemodel);
    }
    
    public boolean agrupar(int id, float cantidad){
        boolean bandera=false;
        for(int i=0; i<ven.getDetalle_venta().size(); i++){
            if(ven.getDetalle_venta().get(i).getProducto().getId_producto()==id){
                ven.getDetalle_venta().get(i).setCantidad(ven.getDetalle_venta().get(i).getCantidad()+cantidad);
                ven.getDetalle_venta().get(i).setSubtotal();
                i=ven.getDetalle_venta().size();
                bandera=true;
            }
        }
        return bandera;
    }
    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
       //Primero se busca que exista el ID ingresado
       boolean bandera=false;
       DAOProducto daoPro=new DAOProducto();
       try{
        Producto p=daoPro.findbyID(Integer.parseInt(ID_ProductoEntrada.getText()));
        if (p!=null){
           if (p.getStock()>=Float.parseFloat(CantidadEntrada.getText()) && CantidadEntrada.getText()!="0"){
               
               bandera=agrupar(p.getId_producto(), Float.parseFloat(CantidadEntrada.getText()));
               
               if (bandera==false){
                    posiciondetalle+=1;
                    Detalle_Venta dv=new Detalle_Venta();
                    dv.setId_detalle_venta(posiciondetalle);
                    dv.setVenta(ven);
                    dv.setProducto(p);
                    dv.setCantidad(Float.parseFloat(CantidadEntrada.getText()));
                    dv.setPrecio_venta();
                    dv.setSubtotal();
                    ven.setDetalle_venta(dv);
               }
               ven.calculartotal();
               fillData(ven.getDetalle_venta());
               TotalEntrada.setText(String.valueOf(ven.getTotal()));
               CantidadEntrada.setText("");
               ID_ProductoEntrada.setText("");
           }else{
               JOptionPane.showMessageDialog(null, "La cantidad ingresada revasa la disponibilidad del producto.");
           }
        }else{
           JOptionPane.showMessageDialog(null, "El ID del Producto ingresado no existe.");
        }
       }catch(Exception ex){
           JOptionPane.showMessageDialog(null, "Ingresa solo numeros en los campos requeridos.");
       }
    }//GEN-LAST:event_agregarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        int id=0;
        try{
            id=Integer.parseInt(ID_ProductoEntrada.getText());
            if(id!=0){
                for(int i=0; i<ven.getDetalle_venta().size(); i++){
                    if(ven.getDetalle_venta().get(i).getProducto().getId_producto()==id){
                        posiciondetalle=ven.getDetalle_venta().get(i).getId_detalle_venta();
                        ven.getDetalle_venta().remove(i);
                        for(int a=i; a<ven.getDetalle_venta().size(); a++){
                            ven.getDetalle_venta().get(a).setId_detalle_venta(posiciondetalle);
                            posiciondetalle+=1;
                        }
                        posiciondetalle=ven.getDetalle_venta().size();
                        i=ven.getDetalle_venta().size();
                        ven.calculartotal();
                        JOptionPane.showMessageDialog(null, "Producto Eliminado");
                        fillData(ven.getDetalle_venta());
                        TotalEntrada.setText(String.valueOf(ven.getTotal()));
                        
                    }
                }
            }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "No ingreses texto en el campo ID");
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void cobrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cobrarActionPerformed
        
        try{
            float saldo=Float.parseFloat(JOptionPane.showInputDialog(null, "Ingresa la entrada de dinero. \nTotal a cobrar: "+ven.getTotal()));
            if(saldo>=ven.getTotal()){
                Venta v=daoVen.create(ven);
                if(v!=null){
                    float cambio=saldo-ven.getTotal();
                    DAOProducto daoPro=new DAOProducto();
                    for(Detalle_Venta dv: ven.getDetalle_venta()){
                        Producto p=daoPro.findbyID(dv.getProducto().getId_producto());
                        if(p!=null){
                            p.setStock(p.getStock()-dv.getCantidad());
                            daoPro.update(p, p.getId_producto());
                        }
                        
                    }
                    JOptionPane.showMessageDialog(null, "Venta realizada con exito!\nSu cambio es de: "+cambio);
                    
                    nuevo();
                    CantidadEntrada.setText("");
                    ID_ProductoEntrada.setText("");
                }
            }else{
                JOptionPane.showMessageDialog(null, "La venta no se puede realizar por saldo insuficiente.");
            }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null, "No ingreses texto.");
        }
    }//GEN-LAST:event_cobrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CantidadEntrada;
    private javax.swing.JLabel Fecha;
    private javax.swing.JLabel FechaEntrada;
    private javax.swing.JLabel ID_Producto;
    private javax.swing.JTextField ID_ProductoEntrada;
    private javax.swing.JLabel NumVenta;
    private javax.swing.JLabel NumVentaEntrada;
    private javax.swing.JLabel Total;
    private javax.swing.JLabel TotalEntrada;
    private javax.swing.JButton agregar;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton cobrar;
    private javax.swing.JButton eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
